/*
Fideo API

Fideo Intelligence offers an identity intelligence product that protects the public good. - [Fideo Privacy Policy](https://www.fideo.ai/privacy-policy/)

API version: 1.0.4
Contact: support@fideo.ai
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fideo

import (
	"encoding/json"
)

// checks if the Demographics type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Demographics{}

// Demographics struct for Demographics
type Demographics struct {
	Age *int32 `json:"age,omitempty"`
	AgeRange *string `json:"ageRange,omitempty"`
	Gender *string `json:"gender,omitempty"`
	LocationGeneral *string `json:"locationGeneral,omitempty"`
}

// NewDemographics instantiates a new Demographics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDemographics() *Demographics {
	this := Demographics{}
	return &this
}

// NewDemographicsWithDefaults instantiates a new Demographics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDemographicsWithDefaults() *Demographics {
	this := Demographics{}
	return &this
}

// GetAge returns the Age field value if set, zero value otherwise.
func (o *Demographics) GetAge() int32 {
	if o == nil || IsNil(o.Age) {
		var ret int32
		return ret
	}
	return *o.Age
}

// GetAgeOk returns a tuple with the Age field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Demographics) GetAgeOk() (*int32, bool) {
	if o == nil || IsNil(o.Age) {
		return nil, false
	}
	return o.Age, true
}

// HasAge returns a boolean if a field has been set.
func (o *Demographics) HasAge() bool {
	if o != nil && !IsNil(o.Age) {
		return true
	}

	return false
}

// SetAge gets a reference to the given int32 and assigns it to the Age field.
func (o *Demographics) SetAge(v int32) {
	o.Age = &v
}

// GetAgeRange returns the AgeRange field value if set, zero value otherwise.
func (o *Demographics) GetAgeRange() string {
	if o == nil || IsNil(o.AgeRange) {
		var ret string
		return ret
	}
	return *o.AgeRange
}

// GetAgeRangeOk returns a tuple with the AgeRange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Demographics) GetAgeRangeOk() (*string, bool) {
	if o == nil || IsNil(o.AgeRange) {
		return nil, false
	}
	return o.AgeRange, true
}

// HasAgeRange returns a boolean if a field has been set.
func (o *Demographics) HasAgeRange() bool {
	if o != nil && !IsNil(o.AgeRange) {
		return true
	}

	return false
}

// SetAgeRange gets a reference to the given string and assigns it to the AgeRange field.
func (o *Demographics) SetAgeRange(v string) {
	o.AgeRange = &v
}

// GetGender returns the Gender field value if set, zero value otherwise.
func (o *Demographics) GetGender() string {
	if o == nil || IsNil(o.Gender) {
		var ret string
		return ret
	}
	return *o.Gender
}

// GetGenderOk returns a tuple with the Gender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Demographics) GetGenderOk() (*string, bool) {
	if o == nil || IsNil(o.Gender) {
		return nil, false
	}
	return o.Gender, true
}

// HasGender returns a boolean if a field has been set.
func (o *Demographics) HasGender() bool {
	if o != nil && !IsNil(o.Gender) {
		return true
	}

	return false
}

// SetGender gets a reference to the given string and assigns it to the Gender field.
func (o *Demographics) SetGender(v string) {
	o.Gender = &v
}

// GetLocationGeneral returns the LocationGeneral field value if set, zero value otherwise.
func (o *Demographics) GetLocationGeneral() string {
	if o == nil || IsNil(o.LocationGeneral) {
		var ret string
		return ret
	}
	return *o.LocationGeneral
}

// GetLocationGeneralOk returns a tuple with the LocationGeneral field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Demographics) GetLocationGeneralOk() (*string, bool) {
	if o == nil || IsNil(o.LocationGeneral) {
		return nil, false
	}
	return o.LocationGeneral, true
}

// HasLocationGeneral returns a boolean if a field has been set.
func (o *Demographics) HasLocationGeneral() bool {
	if o != nil && !IsNil(o.LocationGeneral) {
		return true
	}

	return false
}

// SetLocationGeneral gets a reference to the given string and assigns it to the LocationGeneral field.
func (o *Demographics) SetLocationGeneral(v string) {
	o.LocationGeneral = &v
}

func (o Demographics) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Demographics) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Age) {
		toSerialize["age"] = o.Age
	}
	if !IsNil(o.AgeRange) {
		toSerialize["ageRange"] = o.AgeRange
	}
	if !IsNil(o.Gender) {
		toSerialize["gender"] = o.Gender
	}
	if !IsNil(o.LocationGeneral) {
		toSerialize["locationGeneral"] = o.LocationGeneral
	}
	return toSerialize, nil
}

type NullableDemographics struct {
	value *Demographics
	isSet bool
}

func (v NullableDemographics) Get() *Demographics {
	return v.value
}

func (v *NullableDemographics) Set(val *Demographics) {
	v.value = val
	v.isSet = true
}

func (v NullableDemographics) IsSet() bool {
	return v.isSet
}

func (v *NullableDemographics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDemographics(val *Demographics) *NullableDemographics {
	return &NullableDemographics{value: val, isSet: true}
}

func (v NullableDemographics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDemographics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


